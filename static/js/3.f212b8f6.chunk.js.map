{"version":3,"sources":["Component/Profile/Profile.module.scss","Component/Profile/Posts/Posts.module.scss","Component/Profile/Posts/Post/Post.module.scss","Component/Profile/Posts/Post/Post.js","Component/Profile/Posts/Posts.js","Component/Profile/Posts/PostsContainer.js","Component/Profile/ProfileInfo/ProfileStatusWithHooks.js","Component/Profile/ProfileInfo/ProfileInfo.js","Component/Profile/Profile.js","Component/Profile/ProfileContainer.js"],"names":["module","exports","Post","props","className","s","post","post_inner","post_logo","src","postLogo","alt","post_text","message","post_likes","post_likes_svg","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","post_likes_scorer","likes","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","posts_input_cont","Field","validate","required","name","component","Textarea","placeholder","posts_input","posts_input_cont_send","Posts","PostElem","profilePage","PostD","map","item","index","posts","posts_title","values","addPost","newPostText","connect","state","dispatch","type","newText","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","profile_status_changer","onChange","e","currentTarget","value","onBlur","autoFocus","onDoubleClick","profile_status","ProfileInfo","profile","Fetching","main_user","main_user_logo","photos","small","squishi","main_user_des","main_user_des_name","fullName","main_user_des_fulldes","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileStatusWithHooks","Profile","main","updateStatus","PostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","React","Component","compose","auth","id","isAuth","withRouter"],"mappings":"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","file":"static/js/3.f212b8f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__2TvKf\",\"main_bgi\":\"Profile_main_bgi__3qsSM\",\"main_user\":\"Profile_main_user__2z6M7\",\"main_user_logo\":\"Profile_main_user_logo__30NkV\",\"main_user_des\":\"Profile_main_user_des__1YszU\",\"profile_status_changer\":\"Profile_profile_status_changer__2Be5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__1heKL\",\"posts_title\":\"Posts_posts_title__3-HBC\",\"posts_input_cont\":\"Posts_posts_input_cont__19ESX\",\"posts_input_cont_send\":\"Posts_posts_input_cont_send__19N9x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3MabQ\",\"post_inner\":\"Post_post_inner__1Gx0M\",\"post_logo\":\"Post_post_logo__Or-Jo\",\"post_text\":\"Post_post_text__2zV-A\",\"post_likes\":\"Post_post_likes__1zuaL\",\"post_likes_svg\":\"Post_post_likes_svg__2EwSq\",\"post_likes_scorer\":\"Post_post_likes_scorer__31VGi\"};","import React from 'react';\r\nimport s from './Post.module.scss';\r\nimport postLogo from '../../../../img/squishi_big.jpg'\r\n\r\nfunction Post(props) {\r\n   return(\r\n      <div className={s.post}>\r\n         <div className={s.post_inner}>\r\n            <div className={s.post_logo}>\r\n               <img src={postLogo} alt=\"\"/>\r\n            </div>\r\n            <div className={s.post_text}>\r\n               {props.message}\r\n            </div>\r\n         </div>\r\n         <div className={s.post_likes}>\r\n            <div className={s.post_likes_svg}>\r\n               <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-2 w-2\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"\r\n                        d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"/>\r\n               </svg>\r\n            </div>\r\n            <div className={s.post_likes_scorer}>\r\n               <p>{props.likes}</p>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Post;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Posts.module.scss';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst Posts = (props) => {\r\n   let PostElem = props.profilePage.PostD.map((item, index) => <Post message={item.message} likes={item.likes}\r\n                                                                          key={index}/>)\r\n   let onAddPost = (values) => {\r\n      props.addPost(values.newPostText);\r\n   }\r\n\r\n   return (\r\n      <div className={s.posts}>\r\n         <div className={s.posts_title}>\r\n            <h1>My posts:</h1>\r\n         </div>\r\n         <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n         <div>{PostElem}</div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(15)\r\n\r\nlet AddNewPostForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit} className={s.posts_input_cont}>\r\n         <Field validate={[required, maxLength10]} name='newPostText' component={Textarea} placeholder='your news...'\r\n                className={s.posts_input}/>\r\n         <div className={s.posts_input_cont_send}>\r\n            <button>\r\n               SEND\r\n            </button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({\r\n   form: 'ProfileAddNewPostForm'\r\n})(AddNewPostForm)\r\n\r\n\r\nexport default Posts;\r\n\r\n\r\n\r\n","import {addPost} from \"../../../Redux/profileReducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      profilePage: state.profilePage\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addPost: (newPostText) => {\r\n         dispatch(addPost(newPostText))\r\n         dispatch({type: 'UPDATE-NEW-POST-TEXT', newText: ''})\r\n      }\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)\r\n","import React, {useEffect, useState} from \"react\";\r\nimport s from './../Profile.module.scss';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false)\r\n   let [status, setStatus] = useState(props.status)\r\n\r\n   useEffect( () => {\r\n      setStatus(props.status)\r\n   }, [props.status])\r\n\r\n   const activateEditMode = () => {\r\n      setEditMode(true)\r\n   }\r\n\r\n   const deactivateEditMode = () => {\r\n      setEditMode(false)\r\n   }\r\n\r\n   const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value)\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         {editMode\r\n               ? <div className={s.profile_status_changer}>\r\n                  <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n               </div>\r\n               : <div onDoubleClick={activateEditMode} className={s.profile_status}>\r\n                  {status || 'change your status'}\r\n               </div>\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport s from \"../Profile.module.scss\";\r\nimport squishi from \"../../../img/squishi_big.jpg\";\r\nimport Fetching from \"../../common/Fetching/Fetching\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n   if (props.profile === null) {\r\n      return <Fetching/>\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         {/*<div className={s.main_bgi}>*/}\r\n         {/*   <img src={props.profile.photos.large === null*/}\r\n         {/*   ? mainBg*/}\r\n         {/*   : props.profile.photos.large} alt=\"\"/>*/}\r\n         {/*</div>*/}\r\n         <div className={s.main_user}>\r\n            <div className={s.main_user_logo}>\r\n               <img src={props.profile.photos.small === null\r\n               ? squishi\r\n               : props.profile.photos.small} alt=\"\"/>\r\n            </div>\r\n            <div className={s.main_user_des}>\r\n               <div className={s.main_user_des_name}>\r\n                  <h1>{props.profile.fullName}</h1>\r\n               </div>\r\n               <ul className={s.main_user_des_fulldes}>\r\n                  <li>\r\n                     {props.profile.aboutMe}\r\n                  </li>\r\n                  <li>\r\n                     {props.profile.lookingForAJob === true\r\n                        ? `searching a job: ${props.profile.lookingForAJobDescription}`\r\n                        : `i don't looking for a job`\r\n                     }\r\n                  </li>\r\n                  <li>\r\n                     <ProfileStatusWithHooks status={props.status}/>\r\n                  </li>\r\n                  {/*<li className={s.main_user_des_fulldes_birtd}>*/}\r\n                  {/*   <b>Birthday:</b> {props.profileInfo.BD}</li>*/}\r\n                  {/*<li className={s.main_user_des_fulldes_city}>*/}\r\n                  {/*   <b>City:</b> {props.profileInfo.city}</li>*/}\r\n                  {/*<li className={s.main_user_des_fulldes_education}>*/}\r\n                  {/*   <b>Education:</b> {props.profileInfo.education}</li>*/}\r\n                  {/*<li className={s.main_user_des_fulldes_portfolio_link}>*/}\r\n                  {/*   <b>Portfolio Link:</b> {props.profileInfo.PortfLink}</li>*/}\r\n               </ul>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.scss';\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n   return (\r\n      <main className={s.main}>\r\n         <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n         <PostsContainer/>\r\n      </main>\r\n   )\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../Redux/profileReducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n   componentDidMount() {\r\n      let userId = this.props.match.params.userId;\r\n      if (!userId) {\r\n         userId = this.props.authorizedUserId;\r\n      }\r\n      this.props.getUserProfile(userId)\r\n      this.props.getStatus(userId)\r\n   }\r\n\r\n   render() {\r\n\r\n      return (\r\n         <Profile {...this.props}\r\n                  profile={this.props.profile}\r\n                  status={this.props.status}\r\n                  updateStatus={this.props.updateStatus}/>\r\n      )\r\n\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      profile: state.profilePage.profile,\r\n      status: state.profilePage.status,\r\n      authorizedUserId: state.auth.id,\r\n      isAuth: state.auth.isAuth\r\n   }\r\n};\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n   withRouter\r\n   // withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n"],"sourceRoot":""}