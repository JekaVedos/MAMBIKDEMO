{"version":3,"sources":["Component/Messages/Message.module.scss","Component/Messages/Message/Message.js","Component/Messages/Dialog/Dialog.js","Component/Messages/Messages.js","Component/Messages/MessagesContainer.js"],"names":["module","exports","Message","props","className","s","message_cont","message_user_logo","src","imgMess","alt","message","Dialog","path","id","to","mess_user","mess_user_logo","mess_user_name","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","mess_input_cont","Field","component","Input","validate","required","placeholder","mess_input","Messages","state","DialogsElem","MessagePage","DialogsD","map","item","index","MessageElem","MessageD","chatContainer","React","createRef","scrollToMyRef","scroll","current","scrollHeight","clientHeight","scrollTo","mess_container","mess_users","mess_messages_cont","ref","messages_container","values","sendMessage","newMessValue","compose","connect","dispatch","sendMessageActionCreator","type","updMessText","withAuthRedirect"],"mappings":"6EACAA,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,WAAa,4BAA4B,UAAY,2BAA2B,eAAiB,gCAAgC,mBAAqB,oCAAoC,mBAAqB,oCAAoC,aAAe,8BAA8B,kBAAoB,mCAAmC,WAAa,4BAA4B,gBAAkB,mC,uGCgBtcC,EAbC,SAACC,GACd,OACG,qBAAIC,UAAWC,IAAEC,aAAjB,UACG,qBAAKF,UAAWC,IAAEE,kBAAlB,SACG,qBAAKC,IAAKC,IAASC,IAAI,OAE1B,qBAAKN,UAAU,eAAf,SACG,4BAAID,EAAMQ,gB,QCSPC,EAhBA,SAACT,GACb,IAAIU,EAAI,oBAAgBV,EAAMW,IAC9B,OACG,cAAC,IAAD,CAASC,GAAIF,EAAb,SACG,sBAAKT,UAAWC,IAAEW,UAAlB,UACG,qBAAKZ,UAAWC,IAAEY,eAAlB,SACG,qBAAKT,IAAKC,IAASC,IAAI,OAE1B,qBAAKN,UAAWC,IAAEa,eAAlB,SACG,6BAAKf,EAAMgB,e,kCC6BpBC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CACnCC,KAAM,wBADmBD,EAdL,SAACpB,GACrB,OACG,sBAAMsB,SAAUtB,EAAMuB,aAAtB,SACG,sBAAKtB,UAAWC,IAAEsB,gBAAlB,UACG,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAOC,SAAU,CAACC,IAAUZ,GAAcD,KAAM,eAAgBc,YAAa,qBACxF7B,UAAWC,IAAE6B,aACpB,kDAYGC,EAtDE,SAAChC,EAAOiC,GAEtB,IAAIC,EAAclC,EAAMmC,YAAYC,SAASC,KAAI,SAACC,EAAMC,GAAP,OAAiB,cAAC,EAAD,CAAoB5B,GAAI2B,EAAK3B,GACrBK,KAAMsB,EAAKtB,MADNuB,MAG3EC,EAAcxC,EAAMmC,YAAYM,SAASJ,KAAI,SAACC,EAAMC,GAAP,OAAiB,cAAC,EAAD,CAAqB/B,QAAS8B,EAAK9B,SAArB+B,MAE5EG,EAAgBC,IAAMC,YAOtBC,EAAgB,WACjB,IAAMC,EAASJ,EAAcK,QAAQC,aAAeN,EAAcK,QAAQE,aAC1EP,EAAcK,QAAQG,SAAS,EAAGJ,IAGrC,OACG,sBAAK7C,UAAWC,IAAEiD,eAAlB,UACG,qBAAKlD,UAAWC,IAAEkD,WAAlB,SACIlB,IAEJ,sBAAKjC,UAAWC,IAAEmD,mBAAlB,UACG,oBAAIC,IAAKZ,EAAezC,UAAWC,IAAEqD,mBAArC,SACIf,IAEJ,cAACrB,EAAD,CAAqBG,SAnBV,SAACkC,GAClBxD,EAAMyD,YAAYD,EAAOE,cACzBb,c,wBCESc,4BACZC,aAhBmB,SAAC3B,GACpB,MAAO,CACJE,YAAaF,EAAME,gBAIA,SAAC0B,GACvB,MAAO,CACJJ,YAAa,SAACC,GACXG,EAASC,YAAyBJ,IAClCG,EAAS,CAACE,KAAM,0BAA2BC,YAAa,UAO9DC,IAFYN,CAGb3B","file":"static/js/4.f37bbdf1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mess_container\":\"Message_mess_container__1Cq1w\",\"mess_users\":\"Message_mess_users__1z_cc\",\"mess_user\":\"Message_mess_user__2uFnW\",\"mess_user_logo\":\"Message_mess_user_logo__2tNS2\",\"mess_messages_cont\":\"Message_mess_messages_cont__u67YH\",\"messages_container\":\"Message_messages_container__Qk_ap\",\"message_cont\":\"Message_message_cont__JtOqC\",\"message_user_logo\":\"Message_message_user_logo__3RgBG\",\"mess_input\":\"Message_mess_input__kyY76\",\"mess_input_cont\":\"Message_mess_input_cont__3HzCm\"};","import s from \"../Message.module.scss\";\r\nimport imgMess from \"../../../img/squishi-round.jpg\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n   return (\r\n      <li className={s.message_cont}>\r\n         <div className={s.message_user_logo}>\r\n            <img src={imgMess} alt=\"\"/>\r\n         </div>\r\n         <div className=\"message_text\">\r\n            <p>{props.message}</p>\r\n         </div>\r\n      </li>\r\n   )\r\n}\r\n\r\nexport default Message;","import {NavLink} from \"react-router-dom\";\r\nimport s from \"../Message.module.scss\";\r\nimport imgMess from \"../../../img/squishi-round.jpg\";\r\n\r\nconst Dialog = (props) => {\r\n   let path = `/messages/${props.id}`\r\n   return (\r\n      <NavLink to={path}>\r\n         <div className={s.mess_user}>\r\n            <div className={s.mess_user_logo}>\r\n               <img src={imgMess} alt=\"\"/>\r\n            </div>\r\n            <div className={s.mess_user_name}>\r\n               <h1>{props.name}</h1>\r\n            </div>\r\n         </div>\r\n      </NavLink>\r\n   )\r\n}\r\n\r\nexport default Dialog","import React from 'react';\r\nimport s from './Message.module.scss'\r\nimport Message from './Message/Message'\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\n\r\nconst Messages = (props, state) => {\r\n\r\n   let DialogsElem = props.MessagePage.DialogsD.map((item, index) => <Dialog key={index} id={item.id}\r\n                                                                             name={item.name}/>)\r\n\r\n   let MessageElem = props.MessagePage.MessageD.map((item, index) => <Message key={index} message={item.message}/>)\r\n\r\n   let chatContainer = React.createRef();\r\n\r\n   let addNewMessage = (values) => {\r\n      props.sendMessage(values.newMessValue)\r\n      scrollToMyRef()\r\n   }\r\n\r\n   let scrollToMyRef = () => {\r\n      const scroll = chatContainer.current.scrollHeight - chatContainer.current.clientHeight;\r\n      chatContainer.current.scrollTo(0, scroll);\r\n   };\r\n\r\n   return (\r\n      <div className={s.mess_container}>\r\n         <div className={s.mess_users}>\r\n            {DialogsElem}\r\n         </div>\r\n         <div className={s.mess_messages_cont}>\r\n            <ul ref={chatContainer} className={s.messages_container}>\r\n               {MessageElem}\r\n            </ul>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div className={s.mess_input_cont}>\r\n            <Field component={Input} validate={[required, maxLength50]} name={'newMessValue'} placeholder={'enter your message'}\r\n                   className={s.mess_input}/>\r\n            <button>\r\n               Send\r\n            </button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n   form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n\r\nexport default Messages;\r\n\r\n\r\n\r\n","import {sendMessageActionCreator} from \"../../Redux/messageReducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      MessagePage: state.MessagePage\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      sendMessage: (newMessValue) => {\r\n         dispatch(sendMessageActionCreator(newMessValue));\r\n         dispatch({type: 'UPDATE-NEW-MESSAGE-TEXT', updMessText: ''});\r\n      }\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   withAuthRedirect\r\n)(Messages);\r\n\r\n\r\n\r\n"],"sourceRoot":""}